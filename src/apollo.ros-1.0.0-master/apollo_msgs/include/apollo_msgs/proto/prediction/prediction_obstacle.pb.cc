// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/prediction/prediction_obstacle.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "apollo_msgs/proto/prediction/prediction_obstacle.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace prediction {

namespace {

const ::google::protobuf::Descriptor* TrajectoryPoint_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TrajectoryPoint_reflection_ = NULL;
const ::google::protobuf::Descriptor* Trajectory_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Trajectory_reflection_ = NULL;
const ::google::protobuf::Descriptor* PredictionObstacle_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PredictionObstacle_reflection_ = NULL;
const ::google::protobuf::Descriptor* PredictionObstacles_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PredictionObstacles_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto() {
  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "apollo_msgs/proto/prediction/prediction_obstacle.proto");
  GOOGLE_CHECK(file != NULL);
  TrajectoryPoint_descriptor_ = file->message_type(0);
  static const int TrajectoryPoint_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrajectoryPoint, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrajectoryPoint, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrajectoryPoint, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrajectoryPoint, velocity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrajectoryPoint, t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrajectoryPoint, heading_),
  };
  TrajectoryPoint_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TrajectoryPoint_descriptor_,
      TrajectoryPoint::default_instance_,
      TrajectoryPoint_offsets_,
      -1,
      -1,
      -1,
      sizeof(TrajectoryPoint),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrajectoryPoint, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TrajectoryPoint, _is_default_instance_));
  Trajectory_descriptor_ = file->message_type(1);
  static const int Trajectory_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trajectory, probability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trajectory, trajectory_point_),
  };
  Trajectory_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Trajectory_descriptor_,
      Trajectory::default_instance_,
      Trajectory_offsets_,
      -1,
      -1,
      -1,
      sizeof(Trajectory),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trajectory, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Trajectory, _is_default_instance_));
  PredictionObstacle_descriptor_ = file->message_type(2);
  static const int PredictionObstacle_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacle, perception_obstacle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacle, time_stamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacle, predicted_period_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacle, trajectory_),
  };
  PredictionObstacle_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PredictionObstacle_descriptor_,
      PredictionObstacle::default_instance_,
      PredictionObstacle_offsets_,
      -1,
      -1,
      -1,
      sizeof(PredictionObstacle),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacle, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacle, _is_default_instance_));
  PredictionObstacles_descriptor_ = file->message_type(3);
  static const int PredictionObstacles_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacles, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacles, prediction_obstacle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacles, perception_error_code_),
  };
  PredictionObstacles_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PredictionObstacles_descriptor_,
      PredictionObstacles::default_instance_,
      PredictionObstacles_offsets_,
      -1,
      -1,
      -1,
      sizeof(PredictionObstacles),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacles, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PredictionObstacles, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TrajectoryPoint_descriptor_, &TrajectoryPoint::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Trajectory_descriptor_, &Trajectory::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PredictionObstacle_descriptor_, &PredictionObstacle::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PredictionObstacles_descriptor_, &PredictionObstacles::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto() {
  delete TrajectoryPoint::default_instance_;
  delete TrajectoryPoint_reflection_;
  delete Trajectory::default_instance_;
  delete Trajectory_reflection_;
  delete PredictionObstacle::default_instance_;
  delete PredictionObstacle_reflection_;
  delete PredictionObstacles::default_instance_;
  delete PredictionObstacles_reflection_;
}

void protobuf_AddDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::common::protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fheader_2eproto();
  ::apollo::perception::protobuf_AddDesc_apollo_5fmsgs_2fproto_2fperception_2fperception_5fobstacle_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n6apollo_msgs/proto/prediction/predictio"
    "n_obstacle.proto\022\021apollo.prediction\032%apo"
    "llo_msgs/proto/common/header.proto\0326apol"
    "lo_msgs/proto/perception/perception_obst"
    "acle.proto\"`\n\017TrajectoryPoint\022\t\n\001x\030\001 \001(\001"
    "\022\t\n\001y\030\002 \001(\001\022\t\n\001z\030\003 \001(\001\022\020\n\010velocity\030\004 \001(\001"
    "\022\t\n\001t\030\005 \001(\001\022\017\n\007heading\030\006 \001(\001\"_\n\nTrajecto"
    "ry\022\023\n\013probability\030\001 \001(\001\022<\n\020trajectory_po"
    "int\030\002 \003(\0132\".apollo.prediction.Trajectory"
    "Point\"\271\001\n\022PredictionObstacle\022B\n\023percepti"
    "on_obstacle\030\001 \001(\0132%.apollo.perception.Pe"
    "rceptionObstacle\022\022\n\ntime_stamp\030\002 \001(\001\022\030\n\020"
    "predicted_period\030\003 \001(\001\0221\n\ntrajectory\030\004 \003"
    "(\0132\035.apollo.prediction.Trajectory\"\307\001\n\023Pr"
    "edictionObstacles\022%\n\006header\030\001 \001(\0132\025.apol"
    "lo.common.Header\022B\n\023prediction_obstacle\030"
    "\002 \003(\0132%.apollo.prediction.PredictionObst"
    "acle\022E\n\025perception_error_code\030\003 \001(\0162&.ap"
    "ollo.perception.PerceptionErrorCodeb\006pro"
    "to3", 763);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "apollo_msgs/proto/prediction/prediction_obstacle.proto", &protobuf_RegisterTypes);
  TrajectoryPoint::default_instance_ = new TrajectoryPoint();
  Trajectory::default_instance_ = new Trajectory();
  PredictionObstacle::default_instance_ = new PredictionObstacle();
  PredictionObstacles::default_instance_ = new PredictionObstacles();
  TrajectoryPoint::default_instance_->InitAsDefaultInstance();
  Trajectory::default_instance_->InitAsDefaultInstance();
  PredictionObstacle::default_instance_->InitAsDefaultInstance();
  PredictionObstacles::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto {
  StaticDescriptorInitializer_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto() {
    protobuf_AddDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto();
  }
} static_descriptor_initializer_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TrajectoryPoint::kXFieldNumber;
const int TrajectoryPoint::kYFieldNumber;
const int TrajectoryPoint::kZFieldNumber;
const int TrajectoryPoint::kVelocityFieldNumber;
const int TrajectoryPoint::kTFieldNumber;
const int TrajectoryPoint::kHeadingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TrajectoryPoint::TrajectoryPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.TrajectoryPoint)
}

void TrajectoryPoint::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

TrajectoryPoint::TrajectoryPoint(const TrajectoryPoint& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.TrajectoryPoint)
}

void TrajectoryPoint::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  x_ = 0;
  y_ = 0;
  z_ = 0;
  velocity_ = 0;
  t_ = 0;
  heading_ = 0;
}

TrajectoryPoint::~TrajectoryPoint() {
  // @@protoc_insertion_point(destructor:apollo.prediction.TrajectoryPoint)
  SharedDtor();
}

void TrajectoryPoint::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TrajectoryPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TrajectoryPoint::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TrajectoryPoint_descriptor_;
}

const TrajectoryPoint& TrajectoryPoint::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto();
  return *default_instance_;
}

TrajectoryPoint* TrajectoryPoint::default_instance_ = NULL;

TrajectoryPoint* TrajectoryPoint::New(::google::protobuf::Arena* arena) const {
  TrajectoryPoint* n = new TrajectoryPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TrajectoryPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.TrajectoryPoint)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TrajectoryPoint, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TrajectoryPoint*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(x_, heading_);

#undef ZR_HELPER_
#undef ZR_

}

bool TrajectoryPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.TrajectoryPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double x = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &x_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_y;
        break;
      }

      // optional double y = 2;
      case 2: {
        if (tag == 17) {
         parse_y:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &y_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_z;
        break;
      }

      // optional double z = 3;
      case 3: {
        if (tag == 25) {
         parse_z:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &z_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_velocity;
        break;
      }

      // optional double velocity = 4;
      case 4: {
        if (tag == 33) {
         parse_velocity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &velocity_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_t;
        break;
      }

      // optional double t = 5;
      case 5: {
        if (tag == 41) {
         parse_t:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &t_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(49)) goto parse_heading;
        break;
      }

      // optional double heading = 6;
      case 6: {
        if (tag == 49) {
         parse_heading:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &heading_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.TrajectoryPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.TrajectoryPoint)
  return false;
#undef DO_
}

void TrajectoryPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.TrajectoryPoint)
  // optional double x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->x(), output);
  }

  // optional double y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->y(), output);
  }

  // optional double z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->z(), output);
  }

  // optional double velocity = 4;
  if (this->velocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->velocity(), output);
  }

  // optional double t = 5;
  if (this->t() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->t(), output);
  }

  // optional double heading = 6;
  if (this->heading() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(6, this->heading(), output);
  }

  // @@protoc_insertion_point(serialize_end:apollo.prediction.TrajectoryPoint)
}

::google::protobuf::uint8* TrajectoryPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.TrajectoryPoint)
  // optional double x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->x(), target);
  }

  // optional double y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->y(), target);
  }

  // optional double z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->z(), target);
  }

  // optional double velocity = 4;
  if (this->velocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->velocity(), target);
  }

  // optional double t = 5;
  if (this->t() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->t(), target);
  }

  // optional double heading = 6;
  if (this->heading() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(6, this->heading(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.TrajectoryPoint)
  return target;
}

int TrajectoryPoint::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.TrajectoryPoint)
  int total_size = 0;

  // optional double x = 1;
  if (this->x() != 0) {
    total_size += 1 + 8;
  }

  // optional double y = 2;
  if (this->y() != 0) {
    total_size += 1 + 8;
  }

  // optional double z = 3;
  if (this->z() != 0) {
    total_size += 1 + 8;
  }

  // optional double velocity = 4;
  if (this->velocity() != 0) {
    total_size += 1 + 8;
  }

  // optional double t = 5;
  if (this->t() != 0) {
    total_size += 1 + 8;
  }

  // optional double heading = 6;
  if (this->heading() != 0) {
    total_size += 1 + 8;
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TrajectoryPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.TrajectoryPoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const TrajectoryPoint* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const TrajectoryPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.TrajectoryPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.TrajectoryPoint)
    MergeFrom(*source);
  }
}

void TrajectoryPoint::MergeFrom(const TrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.TrajectoryPoint)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.velocity() != 0) {
    set_velocity(from.velocity());
  }
  if (from.t() != 0) {
    set_t(from.t());
  }
  if (from.heading() != 0) {
    set_heading(from.heading());
  }
}

void TrajectoryPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.TrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrajectoryPoint::CopyFrom(const TrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.TrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrajectoryPoint::IsInitialized() const {

  return true;
}

void TrajectoryPoint::Swap(TrajectoryPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TrajectoryPoint::InternalSwap(TrajectoryPoint* other) {
  std::swap(x_, other->x_);
  std::swap(y_, other->y_);
  std::swap(z_, other->z_);
  std::swap(velocity_, other->velocity_);
  std::swap(t_, other->t_);
  std::swap(heading_, other->heading_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TrajectoryPoint::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TrajectoryPoint_descriptor_;
  metadata.reflection = TrajectoryPoint_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TrajectoryPoint

// optional double x = 1;
void TrajectoryPoint::clear_x() {
  x_ = 0;
}
 double TrajectoryPoint::x() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.x)
  return x_;
}
 void TrajectoryPoint::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.x)
}

// optional double y = 2;
void TrajectoryPoint::clear_y() {
  y_ = 0;
}
 double TrajectoryPoint::y() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.y)
  return y_;
}
 void TrajectoryPoint::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.y)
}

// optional double z = 3;
void TrajectoryPoint::clear_z() {
  z_ = 0;
}
 double TrajectoryPoint::z() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.z)
  return z_;
}
 void TrajectoryPoint::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.z)
}

// optional double velocity = 4;
void TrajectoryPoint::clear_velocity() {
  velocity_ = 0;
}
 double TrajectoryPoint::velocity() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.velocity)
  return velocity_;
}
 void TrajectoryPoint::set_velocity(double value) {
  
  velocity_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.velocity)
}

// optional double t = 5;
void TrajectoryPoint::clear_t() {
  t_ = 0;
}
 double TrajectoryPoint::t() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.t)
  return t_;
}
 void TrajectoryPoint::set_t(double value) {
  
  t_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.t)
}

// optional double heading = 6;
void TrajectoryPoint::clear_heading() {
  heading_ = 0;
}
 double TrajectoryPoint::heading() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryPoint.heading)
  return heading_;
}
 void TrajectoryPoint::set_heading(double value) {
  
  heading_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryPoint.heading)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Trajectory::kProbabilityFieldNumber;
const int Trajectory::kTrajectoryPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Trajectory::Trajectory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.Trajectory)
}

void Trajectory::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Trajectory::Trajectory(const Trajectory& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.Trajectory)
}

void Trajectory::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  probability_ = 0;
}

Trajectory::~Trajectory() {
  // @@protoc_insertion_point(destructor:apollo.prediction.Trajectory)
  SharedDtor();
}

void Trajectory::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Trajectory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Trajectory::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Trajectory_descriptor_;
}

const Trajectory& Trajectory::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto();
  return *default_instance_;
}

Trajectory* Trajectory::default_instance_ = NULL;

Trajectory* Trajectory::New(::google::protobuf::Arena* arena) const {
  Trajectory* n = new Trajectory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Trajectory::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.Trajectory)
  probability_ = 0;
  trajectory_point_.Clear();
}

bool Trajectory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.Trajectory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double probability = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_trajectory_point;
        break;
      }

      // repeated .apollo.prediction.TrajectoryPoint trajectory_point = 2;
      case 2: {
        if (tag == 18) {
         parse_trajectory_point:
          DO_(input->IncrementRecursionDepth());
         parse_loop_trajectory_point:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_trajectory_point()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_trajectory_point;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.Trajectory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.Trajectory)
  return false;
#undef DO_
}

void Trajectory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.Trajectory)
  // optional double probability = 1;
  if (this->probability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // repeated .apollo.prediction.TrajectoryPoint trajectory_point = 2;
  for (unsigned int i = 0, n = this->trajectory_point_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->trajectory_point(i), output);
  }

  // @@protoc_insertion_point(serialize_end:apollo.prediction.Trajectory)
}

::google::protobuf::uint8* Trajectory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.Trajectory)
  // optional double probability = 1;
  if (this->probability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // repeated .apollo.prediction.TrajectoryPoint trajectory_point = 2;
  for (unsigned int i = 0, n = this->trajectory_point_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->trajectory_point(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.Trajectory)
  return target;
}

int Trajectory::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.Trajectory)
  int total_size = 0;

  // optional double probability = 1;
  if (this->probability() != 0) {
    total_size += 1 + 8;
  }

  // repeated .apollo.prediction.TrajectoryPoint trajectory_point = 2;
  total_size += 1 * this->trajectory_point_size();
  for (int i = 0; i < this->trajectory_point_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trajectory_point(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Trajectory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.Trajectory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Trajectory* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Trajectory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.Trajectory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.Trajectory)
    MergeFrom(*source);
  }
}

void Trajectory::MergeFrom(const Trajectory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.Trajectory)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  trajectory_point_.MergeFrom(from.trajectory_point_);
  if (from.probability() != 0) {
    set_probability(from.probability());
  }
}

void Trajectory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Trajectory::CopyFrom(const Trajectory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.Trajectory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Trajectory::IsInitialized() const {

  return true;
}

void Trajectory::Swap(Trajectory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Trajectory::InternalSwap(Trajectory* other) {
  std::swap(probability_, other->probability_);
  trajectory_point_.UnsafeArenaSwap(&other->trajectory_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Trajectory::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Trajectory_descriptor_;
  metadata.reflection = Trajectory_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Trajectory

// optional double probability = 1;
void Trajectory::clear_probability() {
  probability_ = 0;
}
 double Trajectory::probability() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Trajectory.probability)
  return probability_;
}
 void Trajectory::set_probability(double value) {
  
  probability_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.Trajectory.probability)
}

// repeated .apollo.prediction.TrajectoryPoint trajectory_point = 2;
int Trajectory::trajectory_point_size() const {
  return trajectory_point_.size();
}
void Trajectory::clear_trajectory_point() {
  trajectory_point_.Clear();
}
const ::apollo::prediction::TrajectoryPoint& Trajectory::trajectory_point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Trajectory.trajectory_point)
  return trajectory_point_.Get(index);
}
::apollo::prediction::TrajectoryPoint* Trajectory::mutable_trajectory_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Trajectory.trajectory_point)
  return trajectory_point_.Mutable(index);
}
::apollo::prediction::TrajectoryPoint* Trajectory::add_trajectory_point() {
  // @@protoc_insertion_point(field_add:apollo.prediction.Trajectory.trajectory_point)
  return trajectory_point_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::prediction::TrajectoryPoint >*
Trajectory::mutable_trajectory_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Trajectory.trajectory_point)
  return &trajectory_point_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::TrajectoryPoint >&
Trajectory::trajectory_point() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Trajectory.trajectory_point)
  return trajectory_point_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionObstacle::kPerceptionObstacleFieldNumber;
const int PredictionObstacle::kTimeStampFieldNumber;
const int PredictionObstacle::kPredictedPeriodFieldNumber;
const int PredictionObstacle::kTrajectoryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionObstacle::PredictionObstacle()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.PredictionObstacle)
}

void PredictionObstacle::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  perception_obstacle_ = const_cast< ::apollo::perception::PerceptionObstacle*>(&::apollo::perception::PerceptionObstacle::default_instance());
}

PredictionObstacle::PredictionObstacle(const PredictionObstacle& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionObstacle)
}

void PredictionObstacle::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  perception_obstacle_ = NULL;
  time_stamp_ = 0;
  predicted_period_ = 0;
}

PredictionObstacle::~PredictionObstacle() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionObstacle)
  SharedDtor();
}

void PredictionObstacle::SharedDtor() {
  if (this != default_instance_) {
    delete perception_obstacle_;
  }
}

void PredictionObstacle::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionObstacle::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PredictionObstacle_descriptor_;
}

const PredictionObstacle& PredictionObstacle::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto();
  return *default_instance_;
}

PredictionObstacle* PredictionObstacle::default_instance_ = NULL;

PredictionObstacle* PredictionObstacle::New(::google::protobuf::Arena* arena) const {
  PredictionObstacle* n = new PredictionObstacle;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PredictionObstacle::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionObstacle)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(PredictionObstacle, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<PredictionObstacle*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(time_stamp_, predicted_period_);
  if (GetArenaNoVirtual() == NULL && perception_obstacle_ != NULL) delete perception_obstacle_;
  perception_obstacle_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  trajectory_.Clear();
}

bool PredictionObstacle::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.PredictionObstacle)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_perception_obstacle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_time_stamp;
        break;
      }

      // optional double time_stamp = 2;
      case 2: {
        if (tag == 17) {
         parse_time_stamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &time_stamp_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_predicted_period;
        break;
      }

      // optional double predicted_period = 3;
      case 3: {
        if (tag == 25) {
         parse_predicted_period:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &predicted_period_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_trajectory;
        break;
      }

      // repeated .apollo.prediction.Trajectory trajectory = 4;
      case 4: {
        if (tag == 34) {
         parse_trajectory:
          DO_(input->IncrementRecursionDepth());
         parse_loop_trajectory:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_trajectory()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_trajectory;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.PredictionObstacle)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.PredictionObstacle)
  return false;
#undef DO_
}

void PredictionObstacle::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.PredictionObstacle)
  // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
  if (this->has_perception_obstacle()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->perception_obstacle_, output);
  }

  // optional double time_stamp = 2;
  if (this->time_stamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->time_stamp(), output);
  }

  // optional double predicted_period = 3;
  if (this->predicted_period() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->predicted_period(), output);
  }

  // repeated .apollo.prediction.Trajectory trajectory = 4;
  for (unsigned int i = 0, n = this->trajectory_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->trajectory(i), output);
  }

  // @@protoc_insertion_point(serialize_end:apollo.prediction.PredictionObstacle)
}

::google::protobuf::uint8* PredictionObstacle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionObstacle)
  // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
  if (this->has_perception_obstacle()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->perception_obstacle_, false, target);
  }

  // optional double time_stamp = 2;
  if (this->time_stamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->time_stamp(), target);
  }

  // optional double predicted_period = 3;
  if (this->predicted_period() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->predicted_period(), target);
  }

  // repeated .apollo.prediction.Trajectory trajectory = 4;
  for (unsigned int i = 0, n = this->trajectory_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->trajectory(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionObstacle)
  return target;
}

int PredictionObstacle::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionObstacle)
  int total_size = 0;

  // optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
  if (this->has_perception_obstacle()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->perception_obstacle_);
  }

  // optional double time_stamp = 2;
  if (this->time_stamp() != 0) {
    total_size += 1 + 8;
  }

  // optional double predicted_period = 3;
  if (this->predicted_period() != 0) {
    total_size += 1 + 8;
  }

  // repeated .apollo.prediction.Trajectory trajectory = 4;
  total_size += 1 * this->trajectory_size();
  for (int i = 0; i < this->trajectory_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->trajectory(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionObstacle::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.PredictionObstacle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PredictionObstacle* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionObstacle>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.PredictionObstacle)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.PredictionObstacle)
    MergeFrom(*source);
  }
}

void PredictionObstacle::MergeFrom(const PredictionObstacle& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionObstacle)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  trajectory_.MergeFrom(from.trajectory_);
  if (from.has_perception_obstacle()) {
    mutable_perception_obstacle()->::apollo::perception::PerceptionObstacle::MergeFrom(from.perception_obstacle());
  }
  if (from.time_stamp() != 0) {
    set_time_stamp(from.time_stamp());
  }
  if (from.predicted_period() != 0) {
    set_predicted_period(from.predicted_period());
  }
}

void PredictionObstacle::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.PredictionObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionObstacle::CopyFrom(const PredictionObstacle& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionObstacle)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionObstacle::IsInitialized() const {

  return true;
}

void PredictionObstacle::Swap(PredictionObstacle* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionObstacle::InternalSwap(PredictionObstacle* other) {
  std::swap(perception_obstacle_, other->perception_obstacle_);
  std::swap(time_stamp_, other->time_stamp_);
  std::swap(predicted_period_, other->predicted_period_);
  trajectory_.UnsafeArenaSwap(&other->trajectory_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionObstacle::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PredictionObstacle_descriptor_;
  metadata.reflection = PredictionObstacle_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PredictionObstacle

// optional .apollo.perception.PerceptionObstacle perception_obstacle = 1;
bool PredictionObstacle::has_perception_obstacle() const {
  return !_is_default_instance_ && perception_obstacle_ != NULL;
}
void PredictionObstacle::clear_perception_obstacle() {
  if (GetArenaNoVirtual() == NULL && perception_obstacle_ != NULL) delete perception_obstacle_;
  perception_obstacle_ = NULL;
}
const ::apollo::perception::PerceptionObstacle& PredictionObstacle::perception_obstacle() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.perception_obstacle)
  return perception_obstacle_ != NULL ? *perception_obstacle_ : *default_instance_->perception_obstacle_;
}
::apollo::perception::PerceptionObstacle* PredictionObstacle::mutable_perception_obstacle() {
  
  if (perception_obstacle_ == NULL) {
    perception_obstacle_ = new ::apollo::perception::PerceptionObstacle;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacle.perception_obstacle)
  return perception_obstacle_;
}
::apollo::perception::PerceptionObstacle* PredictionObstacle::release_perception_obstacle() {
  // @@protoc_insertion_point(field_release:apollo.prediction.PredictionObstacle.perception_obstacle)
  
  ::apollo::perception::PerceptionObstacle* temp = perception_obstacle_;
  perception_obstacle_ = NULL;
  return temp;
}
void PredictionObstacle::set_allocated_perception_obstacle(::apollo::perception::PerceptionObstacle* perception_obstacle) {
  delete perception_obstacle_;
  perception_obstacle_ = perception_obstacle;
  if (perception_obstacle) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.PredictionObstacle.perception_obstacle)
}

// optional double time_stamp = 2;
void PredictionObstacle::clear_time_stamp() {
  time_stamp_ = 0;
}
 double PredictionObstacle::time_stamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.time_stamp)
  return time_stamp_;
}
 void PredictionObstacle::set_time_stamp(double value) {
  
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacle.time_stamp)
}

// optional double predicted_period = 3;
void PredictionObstacle::clear_predicted_period() {
  predicted_period_ = 0;
}
 double PredictionObstacle::predicted_period() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.predicted_period)
  return predicted_period_;
}
 void PredictionObstacle::set_predicted_period(double value) {
  
  predicted_period_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacle.predicted_period)
}

// repeated .apollo.prediction.Trajectory trajectory = 4;
int PredictionObstacle::trajectory_size() const {
  return trajectory_.size();
}
void PredictionObstacle::clear_trajectory() {
  trajectory_.Clear();
}
const ::apollo::prediction::Trajectory& PredictionObstacle::trajectory(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacle.trajectory)
  return trajectory_.Get(index);
}
::apollo::prediction::Trajectory* PredictionObstacle::mutable_trajectory(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacle.trajectory)
  return trajectory_.Mutable(index);
}
::apollo::prediction::Trajectory* PredictionObstacle::add_trajectory() {
  // @@protoc_insertion_point(field_add:apollo.prediction.PredictionObstacle.trajectory)
  return trajectory_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >*
PredictionObstacle::mutable_trajectory() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.PredictionObstacle.trajectory)
  return &trajectory_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::Trajectory >&
PredictionObstacle::trajectory() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.PredictionObstacle.trajectory)
  return trajectory_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionObstacles::kHeaderFieldNumber;
const int PredictionObstacles::kPredictionObstacleFieldNumber;
const int PredictionObstacles::kPerceptionErrorCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionObstacles::PredictionObstacles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.PredictionObstacles)
}

void PredictionObstacles::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  header_ = const_cast< ::apollo::common::Header*>(&::apollo::common::Header::default_instance());
}

PredictionObstacles::PredictionObstacles(const PredictionObstacles& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionObstacles)
}

void PredictionObstacles::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  header_ = NULL;
  perception_error_code_ = 0;
}

PredictionObstacles::~PredictionObstacles() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionObstacles)
  SharedDtor();
}

void PredictionObstacles::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
  }
}

void PredictionObstacles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionObstacles::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PredictionObstacles_descriptor_;
}

const PredictionObstacles& PredictionObstacles::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apollo_5fmsgs_2fproto_2fprediction_2fprediction_5fobstacle_2eproto();
  return *default_instance_;
}

PredictionObstacles* PredictionObstacles::default_instance_ = NULL;

PredictionObstacles* PredictionObstacles::New(::google::protobuf::Arena* arena) const {
  PredictionObstacles* n = new PredictionObstacles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PredictionObstacles::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionObstacles)
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
  perception_error_code_ = 0;
  prediction_obstacle_.Clear();
}

bool PredictionObstacles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.prediction.PredictionObstacles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.Header header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_prediction_obstacle;
        break;
      }

      // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
      case 2: {
        if (tag == 18) {
         parse_prediction_obstacle:
          DO_(input->IncrementRecursionDepth());
         parse_loop_prediction_obstacle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_prediction_obstacle()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_prediction_obstacle;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_perception_error_code;
        break;
      }

      // optional .apollo.perception.PerceptionErrorCode perception_error_code = 3;
      case 3: {
        if (tag == 24) {
         parse_perception_error_code:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_perception_error_code(static_cast< ::apollo::perception::PerceptionErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.prediction.PredictionObstacles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.prediction.PredictionObstacles)
  return false;
#undef DO_
}

void PredictionObstacles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.prediction.PredictionObstacles)
  // optional .apollo.common.Header header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
  for (unsigned int i = 0, n = this->prediction_obstacle_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->prediction_obstacle(i), output);
  }

  // optional .apollo.perception.PerceptionErrorCode perception_error_code = 3;
  if (this->perception_error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->perception_error_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:apollo.prediction.PredictionObstacles)
}

::google::protobuf::uint8* PredictionObstacles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionObstacles)
  // optional .apollo.common.Header header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
  for (unsigned int i = 0, n = this->prediction_obstacle_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->prediction_obstacle(i), false, target);
  }

  // optional .apollo.perception.PerceptionErrorCode perception_error_code = 3;
  if (this->perception_error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->perception_error_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionObstacles)
  return target;
}

int PredictionObstacles::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionObstacles)
  int total_size = 0;

  // optional .apollo.common.Header header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->header_);
  }

  // optional .apollo.perception.PerceptionErrorCode perception_error_code = 3;
  if (this->perception_error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->perception_error_code());
  }

  // repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
  total_size += 1 * this->prediction_obstacle_size();
  for (int i = 0; i < this->prediction_obstacle_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->prediction_obstacle(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionObstacles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.PredictionObstacles)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const PredictionObstacles* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionObstacles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.PredictionObstacles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.PredictionObstacles)
    MergeFrom(*source);
  }
}

void PredictionObstacles::MergeFrom(const PredictionObstacles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionObstacles)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  prediction_obstacle_.MergeFrom(from.prediction_obstacle_);
  if (from.has_header()) {
    mutable_header()->::apollo::common::Header::MergeFrom(from.header());
  }
  if (from.perception_error_code() != 0) {
    set_perception_error_code(from.perception_error_code());
  }
}

void PredictionObstacles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.PredictionObstacles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionObstacles::CopyFrom(const PredictionObstacles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionObstacles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionObstacles::IsInitialized() const {

  return true;
}

void PredictionObstacles::Swap(PredictionObstacles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionObstacles::InternalSwap(PredictionObstacles* other) {
  std::swap(header_, other->header_);
  prediction_obstacle_.UnsafeArenaSwap(&other->prediction_obstacle_);
  std::swap(perception_error_code_, other->perception_error_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionObstacles::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PredictionObstacles_descriptor_;
  metadata.reflection = PredictionObstacles_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PredictionObstacles

// optional .apollo.common.Header header = 1;
bool PredictionObstacles::has_header() const {
  return !_is_default_instance_ && header_ != NULL;
}
void PredictionObstacles::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
const ::apollo::common::Header& PredictionObstacles::header() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::apollo::common::Header* PredictionObstacles::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::apollo::common::Header;
  }
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacles.header)
  return header_;
}
::apollo::common::Header* PredictionObstacles::release_header() {
  // @@protoc_insertion_point(field_release:apollo.prediction.PredictionObstacles.header)
  
  ::apollo::common::Header* temp = header_;
  header_ = NULL;
  return temp;
}
void PredictionObstacles::set_allocated_header(::apollo::common::Header* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.PredictionObstacles.header)
}

// repeated .apollo.prediction.PredictionObstacle prediction_obstacle = 2;
int PredictionObstacles::prediction_obstacle_size() const {
  return prediction_obstacle_.size();
}
void PredictionObstacles::clear_prediction_obstacle() {
  prediction_obstacle_.Clear();
}
const ::apollo::prediction::PredictionObstacle& PredictionObstacles::prediction_obstacle(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return prediction_obstacle_.Get(index);
}
::apollo::prediction::PredictionObstacle* PredictionObstacles::mutable_prediction_obstacle(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return prediction_obstacle_.Mutable(index);
}
::apollo::prediction::PredictionObstacle* PredictionObstacles::add_prediction_obstacle() {
  // @@protoc_insertion_point(field_add:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return prediction_obstacle_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >*
PredictionObstacles::mutable_prediction_obstacle() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return &prediction_obstacle_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::prediction::PredictionObstacle >&
PredictionObstacles::prediction_obstacle() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.PredictionObstacles.prediction_obstacle)
  return prediction_obstacle_;
}

// optional .apollo.perception.PerceptionErrorCode perception_error_code = 3;
void PredictionObstacles::clear_perception_error_code() {
  perception_error_code_ = 0;
}
 ::apollo::perception::PerceptionErrorCode PredictionObstacles::perception_error_code() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionObstacles.perception_error_code)
  return static_cast< ::apollo::perception::PerceptionErrorCode >(perception_error_code_);
}
 void PredictionObstacles::set_perception_error_code(::apollo::perception::PerceptionErrorCode value) {
  
  perception_error_code_ = value;
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionObstacles.perception_error_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
