// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/common/geometry.proto

#ifndef PROTOBUF_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto__INCLUDED
#define PROTOBUF_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace common {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();

class Point2D;
class Point3D;
class PointENU;
class PointLLH;
class Quaternion;

// ===================================================================

class PointENU : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.PointENU) */ {
 public:
  PointENU();
  virtual ~PointENU();

  PointENU(const PointENU& from);

  inline PointENU& operator=(const PointENU& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointENU& default_instance();

  void Swap(PointENU* other);

  // implements Message ----------------------------------------------

  inline PointENU* New() const { return New(NULL); }

  PointENU* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointENU& from);
  void MergeFrom(const PointENU& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointENU* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.PointENU)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();

  void InitAsDefaultInstance();
  static PointENU* default_instance_;
};
// -------------------------------------------------------------------

class PointLLH : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.PointLLH) */ {
 public:
  PointLLH();
  virtual ~PointLLH();

  PointLLH(const PointLLH& from);

  inline PointLLH& operator=(const PointLLH& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PointLLH& default_instance();

  void Swap(PointLLH* other);

  // implements Message ----------------------------------------------

  inline PointLLH* New() const { return New(NULL); }

  PointLLH* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PointLLH& from);
  void MergeFrom(const PointLLH& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PointLLH* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double lon = 1;
  void clear_lon();
  static const int kLonFieldNumber = 1;
  double lon() const;
  void set_lon(double value);

  // optional double lat = 2;
  void clear_lat();
  static const int kLatFieldNumber = 2;
  double lat() const;
  void set_lat(double value);

  // optional double height = 3;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  double height() const;
  void set_height(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.PointLLH)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double lon_;
  double lat_;
  double height_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();

  void InitAsDefaultInstance();
  static PointLLH* default_instance_;
};
// -------------------------------------------------------------------

class Point2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.Point2D) */ {
 public:
  Point2D();
  virtual ~Point2D();

  Point2D(const Point2D& from);

  inline Point2D& operator=(const Point2D& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point2D& default_instance();

  void Swap(Point2D* other);

  // implements Message ----------------------------------------------

  inline Point2D* New() const { return New(NULL); }

  Point2D* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point2D& from);
  void MergeFrom(const Point2D& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Point2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.Point2D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double x_;
  double y_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();

  void InitAsDefaultInstance();
  static Point2D* default_instance_;
};
// -------------------------------------------------------------------

class Point3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.Point3D) */ {
 public:
  Point3D();
  virtual ~Point3D();

  Point3D(const Point3D& from);

  inline Point3D& operator=(const Point3D& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point3D& default_instance();

  void Swap(Point3D* other);

  // implements Message ----------------------------------------------

  inline Point3D* New() const { return New(NULL); }

  Point3D* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Point3D& from);
  void MergeFrom(const Point3D& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Point3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  double x() const;
  void set_x(double value);

  // optional double y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  double y() const;
  void set_y(double value);

  // optional double z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  double z() const;
  void set_z(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.Point3D)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double x_;
  double y_;
  double z_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();

  void InitAsDefaultInstance();
  static Point3D* default_instance_;
};
// -------------------------------------------------------------------

class Quaternion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.Quaternion) */ {
 public:
  Quaternion();
  virtual ~Quaternion();

  Quaternion(const Quaternion& from);

  inline Quaternion& operator=(const Quaternion& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Quaternion& default_instance();

  void Swap(Quaternion* other);

  // implements Message ----------------------------------------------

  inline Quaternion* New() const { return New(NULL); }

  Quaternion* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Quaternion& from);
  void MergeFrom(const Quaternion& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Quaternion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional double qx = 1;
  void clear_qx();
  static const int kQxFieldNumber = 1;
  double qx() const;
  void set_qx(double value);

  // optional double qy = 2;
  void clear_qy();
  static const int kQyFieldNumber = 2;
  double qy() const;
  void set_qy(double value);

  // optional double qz = 3;
  void clear_qz();
  static const int kQzFieldNumber = 3;
  double qz() const;
  void set_qz(double value);

  // optional double qw = 4;
  void clear_qw();
  static const int kQwFieldNumber = 4;
  double qw() const;
  void set_qw(double value);

  // @@protoc_insertion_point(class_scope:apollo.common.Quaternion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  double qx_;
  double qy_;
  double qz_;
  double qw_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();
  friend void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto();

  void InitAsDefaultInstance();
  static Quaternion* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PointENU

// optional double x = 1;
inline void PointENU::clear_x() {
  x_ = 0;
}
inline double PointENU::x() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointENU.x)
  return x_;
}
inline void PointENU::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointENU.x)
}

// optional double y = 2;
inline void PointENU::clear_y() {
  y_ = 0;
}
inline double PointENU::y() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointENU.y)
  return y_;
}
inline void PointENU::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointENU.y)
}

// optional double z = 3;
inline void PointENU::clear_z() {
  z_ = 0;
}
inline double PointENU::z() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointENU.z)
  return z_;
}
inline void PointENU::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointENU.z)
}

// -------------------------------------------------------------------

// PointLLH

// optional double lon = 1;
inline void PointLLH::clear_lon() {
  lon_ = 0;
}
inline double PointLLH::lon() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointLLH.lon)
  return lon_;
}
inline void PointLLH::set_lon(double value) {
  
  lon_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointLLH.lon)
}

// optional double lat = 2;
inline void PointLLH::clear_lat() {
  lat_ = 0;
}
inline double PointLLH::lat() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointLLH.lat)
  return lat_;
}
inline void PointLLH::set_lat(double value) {
  
  lat_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointLLH.lat)
}

// optional double height = 3;
inline void PointLLH::clear_height() {
  height_ = 0;
}
inline double PointLLH::height() const {
  // @@protoc_insertion_point(field_get:apollo.common.PointLLH.height)
  return height_;
}
inline void PointLLH::set_height(double value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.PointLLH.height)
}

// -------------------------------------------------------------------

// Point2D

// optional double x = 1;
inline void Point2D::clear_x() {
  x_ = 0;
}
inline double Point2D::x() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point2D.x)
  return x_;
}
inline void Point2D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point2D.x)
}

// optional double y = 2;
inline void Point2D::clear_y() {
  y_ = 0;
}
inline double Point2D::y() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point2D.y)
  return y_;
}
inline void Point2D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point2D.y)
}

// -------------------------------------------------------------------

// Point3D

// optional double x = 1;
inline void Point3D::clear_x() {
  x_ = 0;
}
inline double Point3D::x() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point3D.x)
  return x_;
}
inline void Point3D::set_x(double value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point3D.x)
}

// optional double y = 2;
inline void Point3D::clear_y() {
  y_ = 0;
}
inline double Point3D::y() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point3D.y)
  return y_;
}
inline void Point3D::set_y(double value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point3D.y)
}

// optional double z = 3;
inline void Point3D::clear_z() {
  z_ = 0;
}
inline double Point3D::z() const {
  // @@protoc_insertion_point(field_get:apollo.common.Point3D.z)
  return z_;
}
inline void Point3D::set_z(double value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Point3D.z)
}

// -------------------------------------------------------------------

// Quaternion

// optional double qx = 1;
inline void Quaternion::clear_qx() {
  qx_ = 0;
}
inline double Quaternion::qx() const {
  // @@protoc_insertion_point(field_get:apollo.common.Quaternion.qx)
  return qx_;
}
inline void Quaternion::set_qx(double value) {
  
  qx_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Quaternion.qx)
}

// optional double qy = 2;
inline void Quaternion::clear_qy() {
  qy_ = 0;
}
inline double Quaternion::qy() const {
  // @@protoc_insertion_point(field_get:apollo.common.Quaternion.qy)
  return qy_;
}
inline void Quaternion::set_qy(double value) {
  
  qy_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Quaternion.qy)
}

// optional double qz = 3;
inline void Quaternion::clear_qz() {
  qz_ = 0;
}
inline double Quaternion::qz() const {
  // @@protoc_insertion_point(field_get:apollo.common.Quaternion.qz)
  return qz_;
}
inline void Quaternion::set_qz(double value) {
  
  qz_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Quaternion.qz)
}

// optional double qw = 4;
inline void Quaternion::clear_qw() {
  qw_ = 0;
}
inline double Quaternion::qw() const {
  // @@protoc_insertion_point(field_get:apollo.common.Quaternion.qw)
  return qw_;
}
inline void Quaternion::set_qw(double value) {
  
  qw_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.Quaternion.qw)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_apollo_5fmsgs_2fproto_2fcommon_2fgeometry_2eproto__INCLUDED
