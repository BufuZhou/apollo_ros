// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/common/adapter_config.proto

#ifndef PROTOBUF_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto__INCLUDED
#define PROTOBUF_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace common {
namespace adapter {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();

class AdapterConfig;
class AdapterManagerConfig;

enum AdapterConfig_MessageType {
  AdapterConfig_MessageType_POINT_CLOUD = 0,
  AdapterConfig_MessageType_GPS = 1,
  AdapterConfig_MessageType_IMU = 2,
  AdapterConfig_MessageType_CHASSIS = 3,
  AdapterConfig_MessageType_LOCALIZATION = 4,
  AdapterConfig_MessageType_PLANNING_TRAJECTORY = 5,
  AdapterConfig_MessageType_MONITOR = 6,
  AdapterConfig_MessageType_PAD = 7,
  AdapterConfig_MessageType_CONTROL_COMMAND = 8,
  AdapterConfig_MessageType_PREDICTION = 9,
  AdapterConfig_MessageType_PERCEPTION_OBSTACLES = 10,
  AdapterConfig_MessageType_TRAFFIC_LIGHT_DETECTION = 11,
  AdapterConfig_MessageType_CHASSIS_DETAIL = 12,
  AdapterConfig_MessageType_DECISION = 13,
  AdapterConfig_MessageType_CANBUS = 14,
  AdapterConfig_MessageType_AdapterConfig_MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdapterConfig_MessageType_AdapterConfig_MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdapterConfig_MessageType_IsValid(int value);
const AdapterConfig_MessageType AdapterConfig_MessageType_MessageType_MIN = AdapterConfig_MessageType_POINT_CLOUD;
const AdapterConfig_MessageType AdapterConfig_MessageType_MessageType_MAX = AdapterConfig_MessageType_CANBUS;
const int AdapterConfig_MessageType_MessageType_ARRAYSIZE = AdapterConfig_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdapterConfig_MessageType_descriptor();
inline const ::std::string& AdapterConfig_MessageType_Name(AdapterConfig_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdapterConfig_MessageType_descriptor(), value);
}
inline bool AdapterConfig_MessageType_Parse(
    const ::std::string& name, AdapterConfig_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdapterConfig_MessageType>(
    AdapterConfig_MessageType_descriptor(), name, value);
}
enum AdapterConfig_Mode {
  AdapterConfig_Mode_RECEIVE_ONLY = 0,
  AdapterConfig_Mode_PUBLISH_ONLY = 1,
  AdapterConfig_Mode_DUPLEX = 2,
  AdapterConfig_Mode_AdapterConfig_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AdapterConfig_Mode_AdapterConfig_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AdapterConfig_Mode_IsValid(int value);
const AdapterConfig_Mode AdapterConfig_Mode_Mode_MIN = AdapterConfig_Mode_RECEIVE_ONLY;
const AdapterConfig_Mode AdapterConfig_Mode_Mode_MAX = AdapterConfig_Mode_DUPLEX;
const int AdapterConfig_Mode_Mode_ARRAYSIZE = AdapterConfig_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* AdapterConfig_Mode_descriptor();
inline const ::std::string& AdapterConfig_Mode_Name(AdapterConfig_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    AdapterConfig_Mode_descriptor(), value);
}
inline bool AdapterConfig_Mode_Parse(
    const ::std::string& name, AdapterConfig_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AdapterConfig_Mode>(
    AdapterConfig_Mode_descriptor(), name, value);
}
// ===================================================================

class AdapterConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.adapter.AdapterConfig) */ {
 public:
  AdapterConfig();
  virtual ~AdapterConfig();

  AdapterConfig(const AdapterConfig& from);

  inline AdapterConfig& operator=(const AdapterConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdapterConfig& default_instance();

  void Swap(AdapterConfig* other);

  // implements Message ----------------------------------------------

  inline AdapterConfig* New() const { return New(NULL); }

  AdapterConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdapterConfig& from);
  void MergeFrom(const AdapterConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdapterConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AdapterConfig_MessageType MessageType;
  static const MessageType POINT_CLOUD =
    AdapterConfig_MessageType_POINT_CLOUD;
  static const MessageType GPS =
    AdapterConfig_MessageType_GPS;
  static const MessageType IMU =
    AdapterConfig_MessageType_IMU;
  static const MessageType CHASSIS =
    AdapterConfig_MessageType_CHASSIS;
  static const MessageType LOCALIZATION =
    AdapterConfig_MessageType_LOCALIZATION;
  static const MessageType PLANNING_TRAJECTORY =
    AdapterConfig_MessageType_PLANNING_TRAJECTORY;
  static const MessageType MONITOR =
    AdapterConfig_MessageType_MONITOR;
  static const MessageType PAD =
    AdapterConfig_MessageType_PAD;
  static const MessageType CONTROL_COMMAND =
    AdapterConfig_MessageType_CONTROL_COMMAND;
  static const MessageType PREDICTION =
    AdapterConfig_MessageType_PREDICTION;
  static const MessageType PERCEPTION_OBSTACLES =
    AdapterConfig_MessageType_PERCEPTION_OBSTACLES;
  static const MessageType TRAFFIC_LIGHT_DETECTION =
    AdapterConfig_MessageType_TRAFFIC_LIGHT_DETECTION;
  static const MessageType CHASSIS_DETAIL =
    AdapterConfig_MessageType_CHASSIS_DETAIL;
  static const MessageType DECISION =
    AdapterConfig_MessageType_DECISION;
  static const MessageType CANBUS =
    AdapterConfig_MessageType_CANBUS;
  static inline bool MessageType_IsValid(int value) {
    return AdapterConfig_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    AdapterConfig_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    AdapterConfig_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    AdapterConfig_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return AdapterConfig_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return AdapterConfig_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return AdapterConfig_MessageType_Parse(name, value);
  }

  typedef AdapterConfig_Mode Mode;
  static const Mode RECEIVE_ONLY =
    AdapterConfig_Mode_RECEIVE_ONLY;
  static const Mode PUBLISH_ONLY =
    AdapterConfig_Mode_PUBLISH_ONLY;
  static const Mode DUPLEX =
    AdapterConfig_Mode_DUPLEX;
  static inline bool Mode_IsValid(int value) {
    return AdapterConfig_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    AdapterConfig_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    AdapterConfig_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    AdapterConfig_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return AdapterConfig_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return AdapterConfig_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return AdapterConfig_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::apollo::common::adapter::AdapterConfig_MessageType type() const;
  void set_type(::apollo::common::adapter::AdapterConfig_MessageType value);

  // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::apollo::common::adapter::AdapterConfig_Mode mode() const;
  void set_mode(::apollo::common::adapter::AdapterConfig_Mode value);

  // optional int32 message_history_limit = 3;
  void clear_message_history_limit();
  static const int kMessageHistoryLimitFieldNumber = 3;
  ::google::protobuf::int32 message_history_limit() const;
  void set_message_history_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:apollo.common.adapter.AdapterConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  int type_;
  int mode_;
  ::google::protobuf::int32 message_history_limit_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
  friend void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
  friend void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();

  void InitAsDefaultInstance();
  static AdapterConfig* default_instance_;
};
// -------------------------------------------------------------------

class AdapterManagerConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.common.adapter.AdapterManagerConfig) */ {
 public:
  AdapterManagerConfig();
  virtual ~AdapterManagerConfig();

  AdapterManagerConfig(const AdapterManagerConfig& from);

  inline AdapterManagerConfig& operator=(const AdapterManagerConfig& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AdapterManagerConfig& default_instance();

  void Swap(AdapterManagerConfig* other);

  // implements Message ----------------------------------------------

  inline AdapterManagerConfig* New() const { return New(NULL); }

  AdapterManagerConfig* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdapterManagerConfig& from);
  void MergeFrom(const AdapterManagerConfig& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AdapterManagerConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  int config_size() const;
  void clear_config();
  static const int kConfigFieldNumber = 1;
  const ::apollo::common::adapter::AdapterConfig& config(int index) const;
  ::apollo::common::adapter::AdapterConfig* mutable_config(int index);
  ::apollo::common::adapter::AdapterConfig* add_config();
  ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >*
      mutable_config();
  const ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >&
      config() const;

  // optional bool is_ros = 2;
  void clear_is_ros();
  static const int kIsRosFieldNumber = 2;
  bool is_ros() const;
  void set_is_ros(bool value);

  // @@protoc_insertion_point(class_scope:apollo.common.adapter.AdapterManagerConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig > config_;
  bool is_ros_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
  friend void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
  friend void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();

  void InitAsDefaultInstance();
  static AdapterManagerConfig* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AdapterConfig

// optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
inline void AdapterConfig::clear_type() {
  type_ = 0;
}
inline ::apollo::common::adapter::AdapterConfig_MessageType AdapterConfig::type() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.type)
  return static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(type_);
}
inline void AdapterConfig::set_type(::apollo::common::adapter::AdapterConfig_MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.type)
}

// optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
inline void AdapterConfig::clear_mode() {
  mode_ = 0;
}
inline ::apollo::common::adapter::AdapterConfig_Mode AdapterConfig::mode() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.mode)
  return static_cast< ::apollo::common::adapter::AdapterConfig_Mode >(mode_);
}
inline void AdapterConfig::set_mode(::apollo::common::adapter::AdapterConfig_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.mode)
}

// optional int32 message_history_limit = 3;
inline void AdapterConfig::clear_message_history_limit() {
  message_history_limit_ = 0;
}
inline ::google::protobuf::int32 AdapterConfig::message_history_limit() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.message_history_limit)
  return message_history_limit_;
}
inline void AdapterConfig::set_message_history_limit(::google::protobuf::int32 value) {
  
  message_history_limit_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.message_history_limit)
}

// -------------------------------------------------------------------

// AdapterManagerConfig

// repeated .apollo.common.adapter.AdapterConfig config = 1;
inline int AdapterManagerConfig::config_size() const {
  return config_.size();
}
inline void AdapterManagerConfig::clear_config() {
  config_.Clear();
}
inline const ::apollo::common::adapter::AdapterConfig& AdapterManagerConfig::config(int index) const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Get(index);
}
inline ::apollo::common::adapter::AdapterConfig* AdapterManagerConfig::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Mutable(index);
}
inline ::apollo::common::adapter::AdapterConfig* AdapterManagerConfig::add_config() {
  // @@protoc_insertion_point(field_add:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >*
AdapterManagerConfig::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:apollo.common.adapter.AdapterManagerConfig.config)
  return &config_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >&
AdapterManagerConfig::config() const {
  // @@protoc_insertion_point(field_list:apollo.common.adapter.AdapterManagerConfig.config)
  return config_;
}

// optional bool is_ros = 2;
inline void AdapterManagerConfig::clear_is_ros() {
  is_ros_ = false;
}
inline bool AdapterManagerConfig::is_ros() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterManagerConfig.is_ros)
  return is_ros_;
}
inline void AdapterManagerConfig::set_is_ros(bool value) {
  
  is_ros_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterManagerConfig.is_ros)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace adapter
}  // namespace common
}  // namespace apollo

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::apollo::common::adapter::AdapterConfig_MessageType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::common::adapter::AdapterConfig_MessageType>() {
  return ::apollo::common::adapter::AdapterConfig_MessageType_descriptor();
}
template <> struct is_proto_enum< ::apollo::common::adapter::AdapterConfig_Mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::common::adapter::AdapterConfig_Mode>() {
  return ::apollo::common::adapter::AdapterConfig_Mode_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto__INCLUDED
