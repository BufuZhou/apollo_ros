// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: apollo_msgs/proto/common/adapter_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "apollo_msgs/proto/common/adapter_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace common {
namespace adapter {

namespace {

const ::google::protobuf::Descriptor* AdapterConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdapterConfig_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* AdapterConfig_MessageType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* AdapterConfig_Mode_descriptor_ = NULL;
const ::google::protobuf::Descriptor* AdapterManagerConfig_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AdapterManagerConfig_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto() {
  protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "apollo_msgs/proto/common/adapter_config.proto");
  GOOGLE_CHECK(file != NULL);
  AdapterConfig_descriptor_ = file->message_type(0);
  static const int AdapterConfig_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, mode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, message_history_limit_),
  };
  AdapterConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AdapterConfig_descriptor_,
      AdapterConfig::default_instance_,
      AdapterConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(AdapterConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterConfig, _is_default_instance_));
  AdapterConfig_MessageType_descriptor_ = AdapterConfig_descriptor_->enum_type(0);
  AdapterConfig_Mode_descriptor_ = AdapterConfig_descriptor_->enum_type(1);
  AdapterManagerConfig_descriptor_ = file->message_type(1);
  static const int AdapterManagerConfig_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterManagerConfig, config_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterManagerConfig, is_ros_),
  };
  AdapterManagerConfig_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AdapterManagerConfig_descriptor_,
      AdapterManagerConfig::default_instance_,
      AdapterManagerConfig_offsets_,
      -1,
      -1,
      -1,
      sizeof(AdapterManagerConfig),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterManagerConfig, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AdapterManagerConfig, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AdapterConfig_descriptor_, &AdapterConfig::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AdapterManagerConfig_descriptor_, &AdapterManagerConfig::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto() {
  delete AdapterConfig::default_instance_;
  delete AdapterConfig_reflection_;
  delete AdapterManagerConfig::default_instance_;
  delete AdapterManagerConfig_reflection_;
}

void protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n-apollo_msgs/proto/common/adapter_confi"
    "g.proto\022\025apollo.common.adapter\"\352\003\n\rAdapt"
    "erConfig\022>\n\004type\030\001 \001(\01620.apollo.common.a"
    "dapter.AdapterConfig.MessageType\0227\n\004mode"
    "\030\002 \001(\0162).apollo.common.adapter.AdapterCo"
    "nfig.Mode\022\035\n\025message_history_limit\030\003 \001(\005"
    "\"\210\002\n\013MessageType\022\017\n\013POINT_CLOUD\020\000\022\007\n\003GPS"
    "\020\001\022\007\n\003IMU\020\002\022\013\n\007CHASSIS\020\003\022\020\n\014LOCALIZATION"
    "\020\004\022\027\n\023PLANNING_TRAJECTORY\020\005\022\013\n\007MONITOR\020\006"
    "\022\007\n\003PAD\020\007\022\023\n\017CONTROL_COMMAND\020\010\022\016\n\nPREDIC"
    "TION\020\t\022\030\n\024PERCEPTION_OBSTACLES\020\n\022\033\n\027TRAF"
    "FIC_LIGHT_DETECTION\020\013\022\022\n\016CHASSIS_DETAIL\020"
    "\014\022\014\n\010DECISION\020\r\022\n\n\006CANBUS\020\016\"6\n\004Mode\022\020\n\014R"
    "ECEIVE_ONLY\020\000\022\020\n\014PUBLISH_ONLY\020\001\022\n\n\006DUPLE"
    "X\020\002\"\\\n\024AdapterManagerConfig\0224\n\006config\030\001 "
    "\003(\0132$.apollo.common.adapter.AdapterConfi"
    "g\022\016\n\006is_ros\030\002 \001(\010b\006proto3", 665);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "apollo_msgs/proto/common/adapter_config.proto", &protobuf_RegisterTypes);
  AdapterConfig::default_instance_ = new AdapterConfig();
  AdapterManagerConfig::default_instance_ = new AdapterManagerConfig();
  AdapterConfig::default_instance_->InitAsDefaultInstance();
  AdapterManagerConfig::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto {
  StaticDescriptorInitializer_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto() {
    protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
  }
} static_descriptor_initializer_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* AdapterConfig_MessageType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdapterConfig_MessageType_descriptor_;
}
bool AdapterConfig_MessageType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdapterConfig_MessageType AdapterConfig::POINT_CLOUD;
const AdapterConfig_MessageType AdapterConfig::GPS;
const AdapterConfig_MessageType AdapterConfig::IMU;
const AdapterConfig_MessageType AdapterConfig::CHASSIS;
const AdapterConfig_MessageType AdapterConfig::LOCALIZATION;
const AdapterConfig_MessageType AdapterConfig::PLANNING_TRAJECTORY;
const AdapterConfig_MessageType AdapterConfig::MONITOR;
const AdapterConfig_MessageType AdapterConfig::PAD;
const AdapterConfig_MessageType AdapterConfig::CONTROL_COMMAND;
const AdapterConfig_MessageType AdapterConfig::PREDICTION;
const AdapterConfig_MessageType AdapterConfig::PERCEPTION_OBSTACLES;
const AdapterConfig_MessageType AdapterConfig::TRAFFIC_LIGHT_DETECTION;
const AdapterConfig_MessageType AdapterConfig::CHASSIS_DETAIL;
const AdapterConfig_MessageType AdapterConfig::DECISION;
const AdapterConfig_MessageType AdapterConfig::CANBUS;
const AdapterConfig_MessageType AdapterConfig::MessageType_MIN;
const AdapterConfig_MessageType AdapterConfig::MessageType_MAX;
const int AdapterConfig::MessageType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AdapterConfig_Mode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdapterConfig_Mode_descriptor_;
}
bool AdapterConfig_Mode_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const AdapterConfig_Mode AdapterConfig::RECEIVE_ONLY;
const AdapterConfig_Mode AdapterConfig::PUBLISH_ONLY;
const AdapterConfig_Mode AdapterConfig::DUPLEX;
const AdapterConfig_Mode AdapterConfig::Mode_MIN;
const AdapterConfig_Mode AdapterConfig::Mode_MAX;
const int AdapterConfig::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdapterConfig::kTypeFieldNumber;
const int AdapterConfig::kModeFieldNumber;
const int AdapterConfig::kMessageHistoryLimitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdapterConfig::AdapterConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.adapter.AdapterConfig)
}

void AdapterConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AdapterConfig::AdapterConfig(const AdapterConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.common.adapter.AdapterConfig)
}

void AdapterConfig::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  mode_ = 0;
  message_history_limit_ = 0;
}

AdapterConfig::~AdapterConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.adapter.AdapterConfig)
  SharedDtor();
}

void AdapterConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AdapterConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdapterConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdapterConfig_descriptor_;
}

const AdapterConfig& AdapterConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
  return *default_instance_;
}

AdapterConfig* AdapterConfig::default_instance_ = NULL;

AdapterConfig* AdapterConfig::New(::google::protobuf::Arena* arena) const {
  AdapterConfig* n = new AdapterConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdapterConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.adapter.AdapterConfig)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AdapterConfig, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AdapterConfig*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(type_, message_history_limit_);

#undef ZR_HELPER_
#undef ZR_

}

bool AdapterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.adapter.AdapterConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_mode;
        break;
      }

      // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
      case 2: {
        if (tag == 16) {
         parse_mode:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::apollo::common::adapter::AdapterConfig_Mode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_message_history_limit;
        break;
      }

      // optional int32 message_history_limit = 3;
      case 3: {
        if (tag == 24) {
         parse_message_history_limit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &message_history_limit_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.adapter.AdapterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.adapter.AdapterConfig)
  return false;
#undef DO_
}

void AdapterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.adapter.AdapterConfig)
  // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  // optional int32 message_history_limit = 3;
  if (this->message_history_limit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->message_history_limit(), output);
  }

  // @@protoc_insertion_point(serialize_end:apollo.common.adapter.AdapterConfig)
}

::google::protobuf::uint8* AdapterConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.adapter.AdapterConfig)
  // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  // optional int32 message_history_limit = 3;
  if (this->message_history_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->message_history_limit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.adapter.AdapterConfig)
  return target;
}

int AdapterConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.adapter.AdapterConfig)
  int total_size = 0;

  // optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  // optional int32 message_history_limit = 3;
  if (this->message_history_limit() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->message_history_limit());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdapterConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.adapter.AdapterConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AdapterConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AdapterConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.adapter.AdapterConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.adapter.AdapterConfig)
    MergeFrom(*source);
  }
}

void AdapterConfig::MergeFrom(const AdapterConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.adapter.AdapterConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
  if (from.message_history_limit() != 0) {
    set_message_history_limit(from.message_history_limit());
  }
}

void AdapterConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.adapter.AdapterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdapterConfig::CopyFrom(const AdapterConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.adapter.AdapterConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdapterConfig::IsInitialized() const {

  return true;
}

void AdapterConfig::Swap(AdapterConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdapterConfig::InternalSwap(AdapterConfig* other) {
  std::swap(type_, other->type_);
  std::swap(mode_, other->mode_);
  std::swap(message_history_limit_, other->message_history_limit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdapterConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdapterConfig_descriptor_;
  metadata.reflection = AdapterConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdapterConfig

// optional .apollo.common.adapter.AdapterConfig.MessageType type = 1;
void AdapterConfig::clear_type() {
  type_ = 0;
}
 ::apollo::common::adapter::AdapterConfig_MessageType AdapterConfig::type() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.type)
  return static_cast< ::apollo::common::adapter::AdapterConfig_MessageType >(type_);
}
 void AdapterConfig::set_type(::apollo::common::adapter::AdapterConfig_MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.type)
}

// optional .apollo.common.adapter.AdapterConfig.Mode mode = 2;
void AdapterConfig::clear_mode() {
  mode_ = 0;
}
 ::apollo::common::adapter::AdapterConfig_Mode AdapterConfig::mode() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.mode)
  return static_cast< ::apollo::common::adapter::AdapterConfig_Mode >(mode_);
}
 void AdapterConfig::set_mode(::apollo::common::adapter::AdapterConfig_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.mode)
}

// optional int32 message_history_limit = 3;
void AdapterConfig::clear_message_history_limit() {
  message_history_limit_ = 0;
}
 ::google::protobuf::int32 AdapterConfig::message_history_limit() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterConfig.message_history_limit)
  return message_history_limit_;
}
 void AdapterConfig::set_message_history_limit(::google::protobuf::int32 value) {
  
  message_history_limit_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterConfig.message_history_limit)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AdapterManagerConfig::kConfigFieldNumber;
const int AdapterManagerConfig::kIsRosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AdapterManagerConfig::AdapterManagerConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.adapter.AdapterManagerConfig)
}

void AdapterManagerConfig::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

AdapterManagerConfig::AdapterManagerConfig(const AdapterManagerConfig& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:apollo.common.adapter.AdapterManagerConfig)
}

void AdapterManagerConfig::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  is_ros_ = false;
}

AdapterManagerConfig::~AdapterManagerConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.adapter.AdapterManagerConfig)
  SharedDtor();
}

void AdapterManagerConfig::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AdapterManagerConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AdapterManagerConfig::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AdapterManagerConfig_descriptor_;
}

const AdapterManagerConfig& AdapterManagerConfig::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_apollo_5fmsgs_2fproto_2fcommon_2fadapter_5fconfig_2eproto();
  return *default_instance_;
}

AdapterManagerConfig* AdapterManagerConfig::default_instance_ = NULL;

AdapterManagerConfig* AdapterManagerConfig::New(::google::protobuf::Arena* arena) const {
  AdapterManagerConfig* n = new AdapterManagerConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AdapterManagerConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.adapter.AdapterManagerConfig)
  is_ros_ = false;
  config_.Clear();
}

bool AdapterManagerConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.common.adapter.AdapterManagerConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.common.adapter.AdapterConfig config = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_config;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_is_ros;
        break;
      }

      // optional bool is_ros = 2;
      case 2: {
        if (tag == 16) {
         parse_is_ros:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_ros_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.common.adapter.AdapterManagerConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.common.adapter.AdapterManagerConfig)
  return false;
#undef DO_
}

void AdapterManagerConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.common.adapter.AdapterManagerConfig)
  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  for (unsigned int i = 0, n = this->config_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->config(i), output);
  }

  // optional bool is_ros = 2;
  if (this->is_ros() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_ros(), output);
  }

  // @@protoc_insertion_point(serialize_end:apollo.common.adapter.AdapterManagerConfig)
}

::google::protobuf::uint8* AdapterManagerConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.adapter.AdapterManagerConfig)
  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  for (unsigned int i = 0, n = this->config_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->config(i), false, target);
  }

  // optional bool is_ros = 2;
  if (this->is_ros() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_ros(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.adapter.AdapterManagerConfig)
  return target;
}

int AdapterManagerConfig::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.adapter.AdapterManagerConfig)
  int total_size = 0;

  // optional bool is_ros = 2;
  if (this->is_ros() != 0) {
    total_size += 1 + 1;
  }

  // repeated .apollo.common.adapter.AdapterConfig config = 1;
  total_size += 1 * this->config_size();
  for (int i = 0; i < this->config_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->config(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AdapterManagerConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.adapter.AdapterManagerConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const AdapterManagerConfig* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const AdapterManagerConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.adapter.AdapterManagerConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.adapter.AdapterManagerConfig)
    MergeFrom(*source);
  }
}

void AdapterManagerConfig::MergeFrom(const AdapterManagerConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.adapter.AdapterManagerConfig)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  config_.MergeFrom(from.config_);
  if (from.is_ros() != 0) {
    set_is_ros(from.is_ros());
  }
}

void AdapterManagerConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.adapter.AdapterManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AdapterManagerConfig::CopyFrom(const AdapterManagerConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.adapter.AdapterManagerConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AdapterManagerConfig::IsInitialized() const {

  return true;
}

void AdapterManagerConfig::Swap(AdapterManagerConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AdapterManagerConfig::InternalSwap(AdapterManagerConfig* other) {
  config_.UnsafeArenaSwap(&other->config_);
  std::swap(is_ros_, other->is_ros_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AdapterManagerConfig::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AdapterManagerConfig_descriptor_;
  metadata.reflection = AdapterManagerConfig_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AdapterManagerConfig

// repeated .apollo.common.adapter.AdapterConfig config = 1;
int AdapterManagerConfig::config_size() const {
  return config_.size();
}
void AdapterManagerConfig::clear_config() {
  config_.Clear();
}
const ::apollo::common::adapter::AdapterConfig& AdapterManagerConfig::config(int index) const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Get(index);
}
::apollo::common::adapter::AdapterConfig* AdapterManagerConfig::mutable_config(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Mutable(index);
}
::apollo::common::adapter::AdapterConfig* AdapterManagerConfig::add_config() {
  // @@protoc_insertion_point(field_add:apollo.common.adapter.AdapterManagerConfig.config)
  return config_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >*
AdapterManagerConfig::mutable_config() {
  // @@protoc_insertion_point(field_mutable_list:apollo.common.adapter.AdapterManagerConfig.config)
  return &config_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::common::adapter::AdapterConfig >&
AdapterManagerConfig::config() const {
  // @@protoc_insertion_point(field_list:apollo.common.adapter.AdapterManagerConfig.config)
  return config_;
}

// optional bool is_ros = 2;
void AdapterManagerConfig::clear_is_ros() {
  is_ros_ = false;
}
 bool AdapterManagerConfig::is_ros() const {
  // @@protoc_insertion_point(field_get:apollo.common.adapter.AdapterManagerConfig.is_ros)
  return is_ros_;
}
 void AdapterManagerConfig::set_is_ros(bool value) {
  
  is_ros_ = value;
  // @@protoc_insertion_point(field_set:apollo.common.adapter.AdapterManagerConfig.is_ros)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace adapter
}  // namespace common
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
